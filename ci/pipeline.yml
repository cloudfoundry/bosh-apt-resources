#@ load("@ytt:data", "data")
#@yaml/text-templated-strings

groups:
- name: debian
  jobs:
    - update-apt-index-html
    - update-rpm-index-html
#@ for package in data.values.packages:
    - #@ package.name
#@ end

jobs:
#@yaml/text-templated-strings
#@ for package in data.values.packages:
- name: #@ package.name
  public: true
  plan:
  - get: bosh-apt-resources
    resource: bosh-apt-resources
  - get: #@ package.name
    resource: #@ package.name
    trigger: true
  - task: create-debian
    config:
      platform: linux
      image_resource:
        source:
          repository: bosh/integration
          tag: main
        type: docker-image
      inputs:
      - name: bosh-apt-resources
      - name: #@ package.name
        path: recipe
      run:
        path: "bosh-apt-resources/ci/tasks/create-debian-pkg-from-binary.sh"
      params:
        DEBUG: 1
        REPO_ROOT: bosh-apt-resources
        REPO_OUT: pushme
        IN_BINARY: #@ package.in_binary
        OUT_BINARY: #@ package.out_binary
        NAME: #@ package.name
        LICENSE: #@ package.license
        DESCRIPTION: #@ package.description
        URL: #@ package.url
        MAINTAINERS: #@ package.maintainers
        VENDOR: #@ package.vendor
        APT_RELEASE_BUCKET: apt.ci.cloudfoundry.org
        AWS_ACCESS_KEY: ((aws_access_key))
        AWS_SECRET_KEY: ((aws_secret_key))
        GPG_ID: ((gpg_key_id))
        GPG_PUBLIC_KEY: ((gpg_public_key))
        GPG_PRIVATE_KEY: ((gpg_private_key))
  - task: create-rpm
    config:
      platform: linux
      image_resource:
        source:
          repository: bosh/integration
          tag: main
        type: docker-image
      inputs:
      - name: bosh-apt-resources
      - name: #@ package.name
        path: recipe
      run:
        path: "bosh-apt-resources/ci/tasks/create-rpm-pkg-from-binary.sh"
      params:
        DEBUG: 1
        REPO_ROOT: bosh-apt-resources
        REPO_OUT: pushme
        IN_BINARY: #@ package.in_binary
        OUT_BINARY: #@ package.out_binary
        NAME: #@ package.name
        LICENSE: #@ package.license
        DESCRIPTION: #@ package.description
        URL: #@ package.url
        MAINTAINERS: #@ package.maintainers
        VENDOR: #@ package.vendor
        RPM_RELEASE_BUCKET: rpm.ci.cloudfoundry.org
        AWS_ACCESS_KEY: ((aws_access_key))
        AWS_SECRET_KEY: ((aws_secret_key))
        GPG_ID: ((rpm_gpg_key_id))
        GPG_PUBLIC_KEY: ((rpm_gpg_public_key))
        GPG_PRIVATE_KEY: ((rpm_gpg_private_subkey_key))

#@ end

- name: update-apt-index-html
  public: true
  plan:
  - get: bosh-apt-resources
    resource: bosh-apt-resources
    trigger: true
  - put: update-apt-index
    params:
      file: bosh-apt-resources/apt/index.html
      acl: public-read
      content_type: text/html

- name: update-rpm-index-html
  public: true
  plan:
  - get: bosh-apt-resources
    resource: bosh-apt-resources
    trigger: true
  - put: update-rpm-index
    params:
      file: bosh-apt-resources/rpm/index.html
      acl: public-read
      content_type: text/html

resources:
- name: bosh-apt-resources
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/bosh-apt-resources

- name: update-apt-index
  type: s3
  source:
    bucket: apt.ci.cloudfoundry.org
    versioned_file: index.html
    access_key_id: ((aws_access_key))
    secret_access_key: ((aws_secret_key))
    region_name: us-east-1

- name: update-rpm-index
  type: s3
  source:
    bucket: rpm.ci.cloudfoundry.org
    versioned_file: index.html
    access_key_id: ((aws_access_key))
    secret_access_key: ((aws_secret_key))
    region_name: us-east-1

#@ for package in data.values.packages:
- name: #@ package.name
  type: github-release
  check_every: 6h
  source:
    user: #@ package.git.user
    repository: #@ package.git.repository
    access_token: ((github_public_repo_token))
#@ end